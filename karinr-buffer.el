(defun karinr-string (cntt)
  (let ((new-cntt (make-string 0 ?x)))
    (dotimes (index (length cntt) new-cntt)
      (let ((old-char (aref cntt index)))
        (if (eq (% index 2) 0)
            (setq new-char (upcase old-char))
          (setq new-char (downcase old-char))
          ))
      (setq new-cntt (concat new-cntt (string new-char)))
      )
    )
  )

(defun karinr-buffer()
  (interactive)
  (let ((begin (point-min))
        (end (point-max)))
    (if mark-active
        (setq begin (region-beginning)
              end (region-end)
              ))
    (setq content (buffer-substring begin end)
          new-content (karinr-string content))
    (delete-region begin end)
    (insert new-content)
    )
  )
